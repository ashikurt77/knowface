{"version":3,"sources":["components/logo/face.png","components/navigation/Navigation.js","components/logo/Logo.js","components/imagelinkform/ImageLinkForm.js","components/rank/Rank.js","components/facerecognition/FaceRecognition.js","components/signin/SignIn.js","components/register/Register.js","components/showcolor/ShowColor.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","_ref","onRoutechange","isSignedIn","react_default","a","createElement","className","onClick","Logo","tilt_default","options","max","scale","style","height","width","src","face","alt","ImageLinkForm","inputChange","buttonChange","fontWeight","type","placeholder","onChange","Rank","textAlign","FaceRecognition","iamgeURL","box","id","left","leftCol","top","topRow","bottom","bottomRow","right","rightCol","SignIn","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onEmailChange","event","setState","signInEmail","target","value","onPassChange","signInPass","onSubmit","fetch","method","headers","Content-Type","body","JSON","stringify","email","state","password","then","response","json","data","signInError","_this2","htmlFor","name","href","React","Component","Register","ShowColor","imgColor","length","background","defineParticle","particles","number","density","enable","value_area","app","Clarifai","App","apiKey","input","faceCalculator","newData","outputs","regions","map","result","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","colorCalculator","color","colors","raw_hex","console","log","imageURL","models","predict","FACE_DETECT_MODEL","catch","err","error","route","particles_default","params","navigation_Navigation","logo_Logo","rank_Rank","components_imagelinkform_ImageLinkForm","components_facerecognition_FaceRecognition","showcolor_ShowColor","signin_SignIn","register_Register","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aca3b0d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/face.f27d26fc.png\";","import React from 'react';\nimport './navigation.css'\n\nconst Navigation = ({onRoutechange,isSignedIn}) => {\n    \n    if(isSignedIn === true){\n        return (\n            <div className='nav-container'>\n                <p onClick={()=>{onRoutechange('signin')}} className='pointer nav-btn-2'>Sign Out</p>\n            </div>\n        )\n    } else {\n        return(\n            <div className='nav-container'>\n                <p onClick={()=>{onRoutechange('signin')}} className='pointer nav-btn-1 '>Sign In</p>\n                <p onClick={()=>{onRoutechange('register')}} className='pointer nav-btn-2'>Register</p>\n            </div>\n        )\n    }\n\n}\n\nexport default Navigation;","import React from 'react';\nimport Tilt from 'react-tilt';\nimport './logo.css';\nimport face from './face.png';\n\nconst Logo = () => {\n    return (\n        <div className = 'logo'>\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 45 , scale : 1.1}} style={{ height: 100, width: 100 }} >\n                <div className=\"Tilt-inner\"> <img src= {face} width='80' height='80' alt=\"logo\"/> </div>\n            </Tilt>\n        </div>\n    )\n}\n\nexport default Logo;","import React from 'react';\nimport './ImageLinkForm.css';\n\nconst ImageLinkForm = ({inputChange, buttonChange}) => {\n    return (\n        <div>\n            <p className='f3' style={{'fontWeight':'bold'}}>\n                {'This Magic Site Will Find Faces In Your Picture'}\n            </p>\n            <div className='img-container shadow-5'>\n                <input className='img-input shadow-5' type=\"text\" placeholder='Put Your Image URL' onChange = {inputChange}/>\n                <button className='img-btn shadow-5' onClick = {buttonChange}>Detect</button>\n            </div>\n        </div>\n    )\n}\n\nexport default ImageLinkForm;","import React from 'react';\n\nconst Rank = () => {\n    return (\n        <div style={{'textAlign':'center'}}>\n            <div className='white f3'>\n                {'Tusher, Your Current Rank Is ...'}\n            </div>\n            <div className='white f1'>\n                {'#5'}\n            </div>\n        </div>\n    )\n}\n\nexport default Rank;","import React from 'react';\nimport './FaceRecognition.css';\n\nconst FaceRecognition = ({iamgeURL,box}) => {\n    return (\n        <div> \n            <div className='face-container'>\n                <img id='faceImg' className = 'faceImg' src={iamgeURL} alt='' />\n                <div style ={{left:box.leftCol, top:box.topRow, bottom:box.bottomRow, right:box.rightCol}}\n                 className='facebox'></div>\n                 {/* <div style ={{left:box1.leftCol, top:box1.topRow, bottom:box1.bottomRow, right:box1.rightCol}}\n                 className='facebox'></div> */}\n            </div>      \n        </div>\n    )\n}\n\nexport default FaceRecognition;","import React from 'react';\n\nclass SignIn extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            signInEmail : \"\",\n            signInPass : \"\",\n            signInError : \"\"\n        }\n    }\n\n    onEmailChange = (event) => {\n        this.setState({\n            signInEmail: event.target.value\n        })\n    }\n\n    onPassChange = (event) => {\n        this.setState({\n            signInPass : event.target.value\n        })\n    }\n\n    onSubmit = () => {\n        fetch(\"http://localhost:3000/signin\", {\n            method : \"post\",\n            headers : {'Content-Type' : 'application/json'},\n            body : JSON.stringify({\n                email : this.state.signInEmail,\n                password : this.state.signInPass\n            })\n        })\n        .then(response => response.json())\n        .then(data => {\n            if(data === \"success\"){\n                this.props.onRoutechange(\"home\");\n            } else{\n                this.setState({ signInError : \"Wrong Email or Password\" });\n            }\n        });       \n    }\n\n    render() {\n        const { onRoutechange } = this.props;\n        return (\n            <article className=\"br2 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l center shadow-5\">\n                <main className=\"pa4 black-80\">\n                    <div className=\"measure\">\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                        <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\n                        <div className=\"mt3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                            <input onChange = {this.onEmailChange} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\n                        </div>\n                        <div className=\"mv3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                            <input onChange={this.onPassChange} className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\n                        </div>\n                        </fieldset>\n                        <div className=\"\">\n                        <input onClick={()=>{this.onSubmit()}} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\"/>\n                        </div>\n                        <div> <p> {this.state.signInError} </p>  </div>\n                        <div className=\"lh-copy mt3\">\n                        <a onClick={()=>{onRoutechange('register')}} href=\"#0\" className=\"f6 link dim black db\">Register</a>\n                        </div>\n                    </div>\n                </main>\n            </article>\n        )\n    }\n}\n\nexport default SignIn;","import React from 'react';\n\nconst Register = ({onRoutechange}) => {\n    return (\n        <article className=\"br2 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l center shadow-5\" >\n            <main className=\"pa4 black-80\">\n                <div className=\"measure\">\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                    <legend className=\"f2 fw6 ph0 mh0\">Register</legend>\n                    <div className=\"mt3\">\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\n                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"name\" name=\"name\"  id=\"name\"/>\n                    </div>\n                    <div className=\"mt3\">\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\n                    </div>\n                    <div className=\"mv3\">\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\n                    </div>\n                    </fieldset>\n                    <div className=\"\">\n                    <input onClick={()=>{onRoutechange('home')}} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Register\"/>\n                    </div>\n                    <div className=\"lh-copy mt3\">\n                    </div>\n                </div>\n            </main>\n        </article>\n    )\n}\n\nexport default Register;","import React from 'react';\nimport './showcolor.css';\n\nconst ShowColor = ({imgColor}) => {\n    if(imgColor.length ===0){\n        return <div></div>\n    } else {\n        return (\n            <div>\n                <p>Primary color of the image is: {imgColor} </p>\n                <div className=\"showcolor\" style={{\"background\":imgColor}}></div>\n            </div>\n            \n        )\n    }\n    \n}\n\nexport default ShowColor;","import React, { Component } from 'react';\nimport './App.css';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/navigation/Navigation';\nimport Logo from './components/logo/Logo';\nimport ImageLinkForm from './components/imagelinkform/ImageLinkForm';\nimport Rank from './components/rank/Rank';\nimport FaceRecognition from './components/facerecognition/FaceRecognition';\nimport SignIn from './components/signin/SignIn';\nimport Register from './components/register/Register';\nimport ShowColor from './components/showcolor/ShowColor';\nimport Particles from 'react-particles-js';\n\nconst defineParticle = {\n    particles: {\n      number:{\n        value:150,\n        density: {\n          enable: true,\n          value_area: 1000\n        }\n      }\n    }\n}\n\n\nconst app = new Clarifai.App({\n  apiKey: 'e74059d2bdd44d828d51667cdf8b477d'\n });\n\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      input: '',\n      imageURL: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      imgColor: ''\n    }\n  }\n\n\n inputChange = (event) => {\n    this.setState({\n      input: event.target.value\n    })\n  }\n\n\n  faceCalculator = (data) => {\n    const newData = data.outputs[0].data.regions.map(result=> result.region_info.bounding_box);  \n    const image = document.getElementById('faceImg');\n    const height = Number(image.height);\n    const width = Number(image.width);\n\n    this.setState({\n      box: {\n            leftCol :newData[0].left_col * width,\n            topRow : newData[0].top_row * height,\n            rightCol: width - (newData[0].right_col * width),\n            bottomRow: height - (newData[0].bottom_row * height)\n          },\n    })\n  }\n\n  colorCalculator =(data) =>{\n    const color = data.outputs[0].data.colors[0].raw_hex;\n    this.setState({imgColor: color});\n    console.log(this.state.imgColor);\n  }\n\n\n  buttonChange = (event) => {\n    this.setState({\n      imageURL: this.state.input\n    })\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n    .then(response => this.faceCalculator(response))\n    .catch(err => console.log(err))\n\n    app.models.predict(\"eeed0b6733a644cea07cf4c60f87ebb7\", this.state.input)\n    .then(response => this.colorCalculator(response))\n    .catch(error=>console.log(error))\n    \n  }\n  \n\n  onRoutechange = (route) => {\n\n    this.setState({\n      route: route\n    });\n\n    if(route==='home'){\n      this.setState({ isSignedIn : true })\n    }else{\n      this.setState({ isSignedIn : false })\n    }\n\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Particles className='particles' params={defineParticle} />\n        <Navigation onRoutechange={this.onRoutechange} isSignedIn={this.state.isSignedIn} />\n        { this.state.route==='home'?\n            <div>\n              <Logo />\n              <div className='main'>\n                <Rank />\n                <ImageLinkForm inputChange = {this.inputChange} buttonChange = {this.buttonChange}/>\n                <FaceRecognition iamgeURL = {this.state.imageURL} box={this.state.box} />\n                <ShowColor imgColor={this.state.imgColor} />\n              </div>\n            </div> \n\n          : (\n            this.state.route==='signin'?\n            <div className='signin-container'> \n              <SignIn onRoutechange={this.onRoutechange} /> \n            </div>\n            :\n            <div className='signin-container'> \n              <Register onRoutechange={this.onRoutechange} />\n            </div>\n          ) \n            \n      }\n      </div>\n    );\n  }  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'tachyons';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}